import http.server
import urllib.parse
import json
import internetarchive
import socket

class MyHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        if self.path == "/":
            self.send_response(200)
            self.send_header("Content-type", "text/html")
            self.end_headers()
            with open("index.html", "rb") as f:
                self.wfile.write(f.read())

        elif self.path.startswith("/episodes"):
            # Identifier for the "Canadian Lara Croft" item on Archive.org
            identifier = "canadian_lara_Croft"

            # Fetch item details, including file list
            item = internetarchive.get_item(identifier)
            files = item.files

            # Log the files for the identifier to the console
            print(f"Files for identifier {identifier}:")
            video_files = []
            for file in files:
                if file.get('format') in ['MPEG4', 'h.264', 'Ogg Video', 'Flash Video', 'WebM']:
                    video_files.append(file['name'])
                    print(file['name'], file.get('format'))

            # Respond with JSON containing video files
            self.send_response(200)
            self.send_header("Content-type", "application/json")
            self.end_headers()

            response_data = {
                "identifier": identifier,
                "videos": video_files
            }

            try:
                self.wfile.write(json.dumps(response_data).encode())
            except BrokenPipeError:
                print("Client disconnected before the response could be fully sent.")

if __name__ == "__main__":
    try:
        server_address = ('', 8014)
        httpd = http.server.HTTPServer(server_address, MyHandler)
        print("Serving on port 8014...")
        httpd.serve_forever()
    except socket.error as e:
        print(f"Socket error: {e}")
